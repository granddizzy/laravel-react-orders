services:
  laravel-react-orders_nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: laravel-react-orders_webserver
    ports:
      - "80:80"
    volumes:
      - ./code:/code/
      - ./phpsocket:/run
    networks:
      - laravel-react-orders-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      XDEBUG_MODE: ${XDEBUG_MODE}
      XDEBUG_CONFIG:
        client_host=host.docker.internal
        start_with_request=yes

  laravel-react-orders_app:
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: myapp/php
    container_name: laravel-react-orders_app
    ports:
      - "5173:5173"
    volumes:
      - ./code:/code/
      - ./phpsocket:/run
    networks:
      - laravel-react-orders-network
    depends_on:
      - laravel-react-orders_database
      - laravel-react-orders_memcache
    environment:
      - PHP_IDE_CONFIG=serverName=IDE

  #  php-cli:
  #    build:
  #      context: ./php-cli
  #      dockerfile: Dockerfile
  #    image: myapp/php # можно использовать тот же образ, что и для PHP-FPM
  #    container_name: php-cli
  #    volumes:
  #      - ./code:/code/
  #    networks:
  #      - app-network
  #    tty: true

  laravel-react-orders_memcache:
    image: memcached:latest
    container_name: laravel-react-orders_memcached
    #    ports:
    #      - "11211:11211"
    command: memcached -m 64
    networks:
      - laravel-react-orders-network

  laravel-react-orders_database:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: laravel-react-orders_database
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - ./db:/var/lib/mysql
    networks:
      - laravel-react-orders-network
    mem_limit: 2g
    cpus: 1.0

  laravel-react-orders_react:
    build:
      context: ./react
      dockerfile: Dockerfile
    container_name: laravel-react-orders_react
    ports:
      - "3000:3000"
    volumes:
      - ./code:/code/
    networks:
      - laravel-react-orders-network
    #command: npm start

#Docker Networks
networks:
  laravel-react-orders-network:
    driver: bridge